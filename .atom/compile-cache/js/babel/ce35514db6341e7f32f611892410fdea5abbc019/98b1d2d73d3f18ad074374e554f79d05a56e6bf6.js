function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _libElementsList = require('../lib/elements/list');

var _libElementsList2 = _interopRequireDefault(_libElementsList);

var _helpers = require('./helpers');

describe('Intentions list element', function () {
  it('has a complete working lifecycle', function () {
    var element = new _libElementsList2['default']();
    var suggestions = [(0, _helpers.createSuggestion)('Suggestion 1', jasmine.createSpy('suggestion.selected.0'), 'someClass', 'someIcon'), (0, _helpers.createSuggestion)('Suggestion 2', jasmine.createSpy('suggestion.selected.1')), (0, _helpers.createSuggestion)('Suggestion 3', jasmine.createSpy('suggestion.selected.2'), 'anotherClass')];

    var selected = jasmine.createSpy('suggestion.selected');
    var rendered = element.render(suggestions, selected);

    expect(rendered.refs.list.children.length).toBe(3);
    expect(rendered.refs.list.children[0].textContent).toBe('Suggestion 1');
    expect(rendered.refs.list.children[1].textContent).toBe('Suggestion 2');
    expect(rendered.refs.list.children[2].textContent).toBe('Suggestion 3');
    expect(rendered.refs.list.children[0].children[0].className).toBe('someClass icon icon-someIcon');
    expect(rendered.refs.list.children[2].children[0].className).toBe('anotherClass');
    expect(element.suggestionsIndex).toBe(-1);

    element.move('down');

    expect(element.suggestionsIndex).toBe(0);
    expect(element.suggestions[element.suggestionsIndex].title).toBe(rendered.refs.list.children[0].textContent);

    element.move('down');

    expect(element.suggestionsIndex).toBe(1);
    expect(element.suggestions[element.suggestionsIndex].title).toBe(rendered.refs.list.children[1].textContent);

    element.move('down');

    expect(element.suggestionsIndex).toBe(2);
    expect(element.suggestions[element.suggestionsIndex].title).toBe(rendered.refs.list.children[2].textContent);

    element.move('up');

    expect(element.suggestionsIndex).toBe(1);
    expect(element.suggestions[element.suggestionsIndex].title).toBe(rendered.refs.list.children[1].textContent);

    element.move('up');

    expect(element.suggestionsIndex).toBe(0);
    expect(element.suggestions[element.suggestionsIndex].title).toBe(rendered.refs.list.children[0].textContent);

    element.move('up');

    expect(element.suggestionsIndex).toBe(2);
    expect(element.suggestions[element.suggestionsIndex].title).toBe(rendered.refs.list.children[2].textContent);

    rendered.refs.list.children[1].children[0].dispatchEvent(new MouseEvent('click', {
      bubbles: true
    }));
    expect(selected).toHaveBeenCalledWith(suggestions[1]);
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9DcmlzRm9ybm8vLmF0b20vcGFja2FnZXMvaW50ZW50aW9ucy9zcGVjL2VsZW1lbnQtbGlzdC1zcGVjLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OytCQUV3QixzQkFBc0I7Ozs7dUJBQ2IsV0FBVzs7QUFFNUMsUUFBUSxDQUFDLHlCQUF5QixFQUFFLFlBQVc7QUFDN0MsSUFBRSxDQUFDLGtDQUFrQyxFQUFFLFlBQVc7QUFDaEQsUUFBTSxPQUFPLEdBQUcsa0NBQWlCLENBQUE7QUFDakMsUUFBTSxXQUFXLEdBQUcsQ0FDbEIsK0JBQWlCLGNBQWMsRUFBRSxPQUFPLENBQUMsU0FBUyxDQUFDLHVCQUF1QixDQUFDLEVBQUUsV0FBVyxFQUFFLFVBQVUsQ0FBQyxFQUNyRywrQkFBaUIsY0FBYyxFQUFFLE9BQU8sQ0FBQyxTQUFTLENBQUMsdUJBQXVCLENBQUMsQ0FBQyxFQUM1RSwrQkFBaUIsY0FBYyxFQUFFLE9BQU8sQ0FBQyxTQUFTLENBQUMsdUJBQXVCLENBQUMsRUFBRSxjQUFjLENBQUMsQ0FDN0YsQ0FBQTs7QUFFRCxRQUFNLFFBQVEsR0FBRyxPQUFPLENBQUMsU0FBUyxDQUFDLHFCQUFxQixDQUFDLENBQUE7QUFDekQsUUFBTSxRQUFRLEdBQUcsT0FBTyxDQUFDLE1BQU0sQ0FBQyxXQUFXLEVBQUUsUUFBUSxDQUFDLENBQUE7O0FBRXRELFVBQU0sQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFBO0FBQ2xELFVBQU0sQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsV0FBVyxDQUFDLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxDQUFBO0FBQ3ZFLFVBQU0sQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsV0FBVyxD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USxDQUFDLENBQUMsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxDQUFBOztBQUU1RyxXQUFPLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFBOztBQUVsQixVQUFNLENBQUMsT0FBTyxDQUFDLGdCQUFnQixDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFBO0FBQ3hDLFVBQU0sQ0FBQyxPQUFPLENBQUMsV0FBVyxDQUFDLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsV0FBVyxDQUFDLENBQUE7O0FBRTVHLFlBQVEsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsYUFBYSxDQUFDLElBQUksVUFBVSxDQUFDLE9BQU8sRUFBRTtBQUMvRSxhQUFPLEVBQUUsSUFBSTtLQUNkLENBQUMsQ0FBQyxDQUFBO0FBQ0gsVUFBTSxDQUFDLFFBQVEsQ0FBQyxDQUFDLG9CQUFvQixDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFBO0dBQ3RELENBQUMsQ0FBQTtDQUNILENBQUMsQ0FBQSIsImZpbGUiOiIvVXNlcnMvQ3Jpc0Zvcm5vLy5hdG9tL3BhY2thZ2VzL2ludGVudGlvbnMvc3BlYy9lbGVtZW50LWxpc3Qtc3BlYy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIEBmbG93ICovXG5cbmltcG9ydCBMaXN0RWxlbWVudCBmcm9tICcuLi9saWIvZWxlbWVudHMvbGlzdCdcbmltcG9ydCB7IGNyZWF0ZVN1Z2dlc3Rpb24gfSBmcm9tICcuL2hlbHBlcnMnXG5cbmRlc2NyaWJlKCdJbnRlbnRpb25zIGxpc3QgZWxlbWVudCcsIGZ1bmN0aW9uKCkge1xuICBpdCgnaGFzIGEgY29tcGxldGUgd29ya2luZyBsaWZlY3ljbGUnLCBmdW5jdGlvbigpIHtcbiAgICBjb25zdCBlbGVtZW50ID0gbmV3IExpc3RFbGVtZW50KClcbiAgICBjb25zdCBzdWdnZXN0aW9ucyA9IFtcbiAgICAgIGNyZWF0ZVN1Z2dlc3Rpb24oJ1N1Z2dlc3Rpb24gMScsIGphc21pbmUuY3JlYXRlU3B5KCdzdWdnZXN0aW9uLnNlbGVjdGVkLjAnKSwgJ3NvbWVDbGFzcycsICdzb21lSWNvbicpLFxuICAgICAgY3JlYXRlU3VnZ2VzdGlvbignU3VnZ2VzdGlvbiAyJywgamFzbWluZS5jcmVhdGVTcHkoJ3N1Z2dlc3Rpb24uc2VsZWN0ZWQuMScpKSxcbiAgICAgIGNyZWF0ZVN1Z2dlc3Rpb24oJ1N1Z2dlc3Rpb24gMycsIGphc21pbmUuY3JlYXRlU3B5KCdzdWdnZXN0aW9uLnNlbGVjdGVkLjInKSwgJ2Fub3RoZXJDbGFzcycpLFxuICAgIF1cblxuICAgIGNvbnN0IHNlbGVjdGVkID0gamFzbWluZS5jcmVhdGVTcHkoJ3N1Z2dlc3Rpb24uc2VsZWN0ZWQnKVxuICAgIGNvbnN0IHJlbmRlcmVkID0gZWxlbWVudC5yZW5kZXIoc3VnZ2VzdGlvbnMsIHNlbGVjdGVkKVxuXG4gICAgZXhwZWN0KHJlbmRlcmVkLnJlZnMubGlzdC5jaGlsZHJlbi5sZW5ndGgpLnRvQmUoMylcbiAgICBleHBlY3QocmVuZGVyZWQucmVmcy5saXN0LmNoaWxkcmVuWzBdLnRleHRDb250ZW50KS50b0JlKCdTdWdnZXN0aW9uIDEnKVxuICAgIGV4cGVjdChyZW5kZXJlZC5yZWZzLmxpc3QuY2hpbGRyZW5bMV0udGV4dENvbnRlbnQpLnRvQmUoJ1N1Z2dlc3Rpb24gMicpXG4gICAgZXhwZWN0KHJlbmRlcmVkLnJlZnMubGlzdC5jaGlsZHJlblsyXS50ZXh0Q29udGVudCkudG9CZSgnU3VnZ2VzdGlvbiAzJylcbiAgICBleHBlY3QocmVuZGVyZWQucmVmcy5saXN0LmNoaWxkcmVuWzBdLmNoaWxkcmVuWzBdLmNsYXNzTmFtZSkudG9CZSgnc29tZUNsYXNzIGljb24gaWNvbi1zb21lSWNvbicpXG4gICAgZXhwZWN0KHJlbmRlcmVkLnJlZnMubGlzdC5jaGlsZHJlblsyXS5jaGlsZHJlblswXS5jbGFzc05hbWUpLnRvQmUoJ2Fub3RoZXJDbGFzcycpXG4gICAgZXhwZWN0KGVsZW1lbnQuc3VnZ2VzdGlvbnNJbmRleCkudG9CZSgtMSlcblxuICAgIGVsZW1lbnQubW92ZSgnZG93bicpXG5cbiAgICBleHBlY3QoZWxlbWVudC5zdWdnZXN0aW9uc0luZGV4KS50b0JlKDApXG4gICAgZXhwZWN0KGVsZW1lbnQuc3VnZ2VzdGlvbnNbZWxlbWVudC5zdWdnZXN0aW9uc0luZGV4XS50aXRsZSkudG9CZShyZW5kZXJlZC5yZWZzLmxpc3QuY2hpbGRyZW5bMF0udGV4dENvbnRlbnQpXG5cbiAgICBlbGVtZW50Lm1vdmUoJ2Rvd24nKVxuXG4gICAgZXhwZWN0KGVsZW1lbnQuc3VnZ2VzdGlvbnNJbmRleCkudG9CZSgxKVxuICAgIGV4cGVjdChlbGVtZW50LnN1Z2dlc3Rpb25zW2VsZW1lbnQuc3VnZ2VzdGlvbnNJbmRleF0udGl0bGUpLnRvQmUocmVuZGVyZWQucmVmcy5saXN0LmNoaWxkcmVuWzFdLnRleHRDb250ZW50KVxuXG4gICAgZWxlbWVudC5tb3ZlKCdkb3duJylcblxuICAgIGV4cGVjdChlbGVtZW50LnN1Z2dlc3Rpb25zSW5kZXgpLnRvQmUoMilcbiAgICBleHBlY3QoZWxlbWVudC5zdWdnZXN0aW9uc1tlbGVtZW50LnN1Z2dlc3Rpb25zSW5kZXhdLnRpdGxlKS50b0JlKHJlbmRlcmVkLnJlZnMubGlzdC5jaGlsZHJlblsyXS50ZXh0Q29udGVudClcblxuICAgIGVsZW1lbnQubW92ZSgndXAnKVxuXG4gICAgZXhwZWN0KGVsZW1lbnQuc3VnZ2VzdGlvbnNJbmRleCkudG9CZSgxKVxuICAgIGV4cGVjdChlbGVtZW50LnN1Z2dlc3Rpb25zW2VsZW1lbnQuc3VnZ2VzdGlvbnNJbmRleF0udGl0bGUpLnRvQmUocmVuZGVyZWQucmVmcy5saXN0LmNoaWxkcmVuWzFdLnRleHRDb250ZW50KVxuXG4gICAgZWxlbWVudC5tb3ZlKCd1cCcpXG5cbiAgICBleHBlY3QoZWxlbWVudC5zdWdnZXN0aW9uc0luZGV4KS50b0JlKDApXG4gICAgZXhwZWN0KGVsZW1lbnQuc3VnZ2VzdGlvbnNbZWxlbWVudC5zdWdnZXN0aW9uc0luZGV4XS50aXRsZSkudG9CZShyZW5kZXJlZC5yZWZzLmxpc3QuY2hpbGRyZW5bMF0udGV4dENvbnRlbnQpXG5cbiAgICBlbGVtZW50Lm1vdmUoJ3VwJylcblxuICAgIGV4cGVjdChlbGVtZW50LnN1Z2dlc3Rpb25zSW5kZXgpLnRvQmUoMilcbiAgICBleHBlY3QoZWxlbWVudC5zdWdnZXN0aW9uc1tlbGVtZW50LnN1Z2dlc3Rpb25zSW5kZXhdLnRpdGxlKS50b0JlKHJlbmRlcmVkLnJlZnMubGlzdC5jaGlsZHJlblsyXS50ZXh0Q29udGVudClcblxuICAgIHJlbmRlcmVkLnJlZnMubGlzdC5jaGlsZHJlblsxXS5jaGlsZHJlblswXS5kaXNwYXRjaEV2ZW50KG5ldyBNb3VzZUV2ZW50KCdjbGljaycsIHtcbiAgICAgIGJ1YmJsZXM6IHRydWUsXG4gICAgfSkpXG4gICAgZXhwZWN0KHNlbGVjdGVkKS50b0hhdmVCZWVuQ2FsbGVkV2l0aChzdWdnZXN0aW9uc1sxXSlcbiAgfSlcbn0pXG4iXX0=